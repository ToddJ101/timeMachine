{"version":3,"sources":["webpack:///./routes/counter/index.js","webpack:///./routes/counter/style.css"],"names":["Clock","Component","time","Date","now","componentDidMount","this","timer","setInterval","setState","render","console","log","state","date","toDateString","toLocaleTimeString","hourRaw","getHours","minRaw","getMinutes","hour","min","sec","getSeconds","class","style","home","clockContainer","minute","second"],"mappings":"kQAiDeA,UA7Cf,cAAoBC,YAAU,6CACpB,CAAEC,KAAMC,KAAKC,QADO,WAGxB,IAAID,KAHoB,CAK5BE,oBACEC,KAAKC,MAAQC,aAAY,KACvBF,KAAKG,SAAS,CACZP,KAAMC,KAAKC,OADb,GAGC,IACJ,CAEDM,SACEC,QAAQC,IAAIN,KAAKO,OACjB,IAAIC,EAAO,IAAIX,KAAKG,KAAKO,MAAMX,MAAMa,eACjCb,EAAO,IAAIC,KAAKG,KAAKO,MAAMX,MAAMc,qBACjCC,EAAU,IAAId,KAAKG,KAAKO,MAAMX,MAAMgB,WACpCC,EAAS,IAAIhB,KAAKG,KAAKO,MAAMX,MAAMkB,aAEnCC,EAAO,GAAKJ,EAAUE,EAAS,EAC/BG,EAAM,EAAIH,EACVI,EAAM,EAHG,IAAIpB,KAAKG,KAAKO,MAAMX,MAAMsB,aAUvC,OALAb,QAAQC,IAAI,oBAAqBN,KAAKO,MAAMX,MAC5CS,QAAQC,IAAI,SAAUS,GACtBV,QAAQC,IAAI,QAASU,GACrBX,QAAQC,IAAI,QAASW,GAGnB,mBACE,mBAAKE,MAAOC,IAAMC,MAChB,mBAAKF,MAAOC,IAAME,gBAChB,mBAAKH,MAAOC,IAAML,KAAMK,MAAQ,qBAAoBL,WACpD,mBAAKI,MAAOC,IAAMG,OAAQH,MAAQ,qBAAoBJ,WACtD,mBAAKG,MAAOC,IAAMI,OAAQJ,MAAQ,qBAAoBH,aAG1D,uBACA,uBAAMrB,EAAK,uBAAOY,GAGvB,E,iEC7CY,KAAC,KAAO,cAAc,eAAiB,wBAAwB,KAAO,cAAc,OAAS,gBAAgB,OAAS,gB","file":"route-counter.chunk.3d8df.esm.js","sourcesContent":["// import { h } from 'preact'\nimport { h, Component } from 'preact'\nimport style from './style.css';\n\nclass Clock extends Component {\n  state = { time: Date.now() };\n\n  d = new Date(); //object of date()\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ \n        time: Date.now()\n      });\n    }, 1000);\n  }\n\n  render() {\n    console.log(this.state);\n    let date = new Date(this.state.time).toDateString();\n    let time = new Date(this.state.time).toLocaleTimeString();\n    let hourRaw = new Date(this.state.time).getHours();\n    let minRaw = new Date(this.state.time).getMinutes();\n    let secRaw = new Date(this.state.time).getSeconds();\n    let hour = 30 * hourRaw + minRaw / 2;\n    let min = 6 * minRaw;\n    let sec = 6 * secRaw;\n    \n    console.log('this.state.time: ', this.state.time);\n    console.log('hour: ', hour);\n    console.log('min: ', min);\n    console.log('sec: ', sec);\n    \n    return (\n      <>\n        <div class={style.home} >\n          <div class={style.clockContainer}>\n            <div class={style.hour} style={`transform: rotate(${hour}deg);`} />\n            <div class={style.minute} style={`transform: rotate(${min}deg);`} />\n            <div class={style.second} style={`transform: rotate(${sec}deg);`} />\n          </div>\n        </div>\n        <br />\n        <div>{time}<br />{date}</div>\n      </>\n   )\n  }\n}\n\nexport default Clock","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__lFQCn\",\"clockContainer\":\"clockContainer__v0daa\",\"hour\":\"hour__2of4Y\",\"minute\":\"minute__lrpxx\",\"second\":\"second__gcogH\"};"],"sourceRoot":""}